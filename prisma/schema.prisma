// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User{
  id String @id @default(cuid())
  email String @unique
  password String
  name String
  role String @default("user")
  phone String?
  image_url String?
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  product Product[]
  order Order[]
  exchange Exchange[]
}

model ProductCategory{
  id String @id @default(cuid())
  name String
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  product Product[]
}

model Product{
  id String @id @default(cuid())
  user_id String
  category_id String
  image_url String
  name String
  price Int
  description String?
  size String
  condition String
  brand String?
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  user User @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: Cascade)
  category ProductCategory @relation(fields: [category_id], references: [id], onDelete: Cascade, onUpdate: Cascade)
  order Order[]
  exchange Exchange[]
}

model Order{
  id String @id @default(cuid())
  user_id String
  product_id String
  payment_proof_url String
  is_paid Boolean @default(false)
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  user User @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: Cascade)
  product Product @relation(fields: [product_id], references: [id], onDelete: Cascade, onUpdate: Cascade)
}

model Exchange{
  id String @id @default(cuid())
  user_id String
  product_id String
  name_product String
  image_url_product String
  brand_product String?
  size_product String
  condition String
  is_accepted Boolean @default(false)
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  user User @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: Cascade)
  product Product @relation(fields: [product_id], references: [id], onDelete: Cascade, onUpdate: Cascade)
}
